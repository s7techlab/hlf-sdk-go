syntax = "proto3";

package hlfsdkgo.block;

option go_package = "github.com/s7techlab/hlf-sdk-go/block";

import "hyperledger/fabric-protos/common/configuration.proto";
import "hyperledger/fabric-protos/common/policies.proto";
import "hyperledger/fabric-protos/msp/msp_config.proto";
import "hyperledger/fabric-protos/orderer/configuration.proto";
import "hyperledger/fabric-protos/peer/configuration.proto";

message ChannelConfig {
    map<string,ApplicationConfig> applications = 1;
    map<string,OrdererConfig> orderers = 2;

    orderer.BatchSize orderer_batch_size = 3;
    string orderer_batch_timeout = 4;
    orderer.ConsensusType orderer_consensus_type = 5; 

    string consortium = 6;
    string hashing_algorithm = 7;
    common.BlockDataHashingStructure block_data_hashing_structure = 8;
    common.Capabilities capabilities = 9;

    map<string,Policy> policy = 10; 
}

message MSP {
    string name = 1;
    msp.FabricMSPConfig config = 2;
    map<string,Policy> policy = 3; 
}

message ApplicationConfig {
    string name = 1;
    MSP msp = 2;
    repeated protos.AnchorPeer anchor_peers = 3;
}

message OrdererConfig {
    string name = 1;
    MSP msp = 2;
    repeated string endpoints = 3;
}

message Policy {
    oneof policy {
        common.ImplicitMetaPolicy implicit = 1;
        common.SignaturePolicyEnvelope signature_policy = 2;
    }
}

enum PolicyKey {
    POLICY_KEY_UNDEFINED = 0;
    POLICY_KEY_READERS = 1;
    POLICY_KEY_WRITERS = 2;
    POLICY_KEY_LIFECYCLE_ENDORSEMENT = 3;
    POLICY_KEY_ENDORSEMENT = 4;
}

message Certificate {
    // sha256 hash
    bytes fingerprint = 1;
    bytes data = 2;
    CertType type = 3;
    string msp_id = 4;
    string msp_name = 5;
}

enum CertType {
    CERT_TYPE_UNDEFINED = 0;
    CERT_TYPE_CA = 1;
    CERT_TYPE_INTERMEDIATE = 2;
    CERT_TYPE_ADMIN = 3;
}
