syntax = "proto3";

package hlfsdkgo.proto.connectivity;
option go_package = "github.com/s7techlab/hlf-sdk-go/proto/connectivity";

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "validate/validate.proto";

service ConnectivityService {
  // CheckChannelAnchorPeers - check availability of all anchor peers participating in channel
  rpc CheckChannelConnectivity (CheckChannelConnectivityRequest) returns (CheckChannelConnectivityResponse) {
    option (google.api.http) = {
      get: "/connectivity/{channel}/peers"
    };
  };
}

message CheckChannelConnectivityRequest{
  // name of channel we checking
  string channel = 1 [(validate.rules).string.min_len = 1];
}
// CheckAnchorPeerRes - checking anchor peers response
message CheckChannelConnectivityResponse {
  OrdererConnectivity orderer = 1;
  // all anchor peers in channel and their statuses
  repeated PeerConnectivity anchor_peers = 2;
  // Gossip info
}

message PeerConnectivity {
  string endpoint = 1;
  string msp_id = 2;
  bool is_alive = 3;
  google.protobuf.Duration dial_duration = 4;
  string dial_error = 5;
  google.protobuf.Duration gossip_ping_duration = 6;
  string gossip_ping_error = 7;
}

message PeersConnectivity {
  repeated PeerConnectivity peers = 1;
}

message OrdererEndpointConnectivity {
  string endpoint = 1;
  bool is_alive = 2;
  google.protobuf.Duration dial_duration = 3;
  string dial_error = 4;
}

message OrdererConnectivity {
  string msp_id = 1;
  repeated OrdererEndpointConnectivity endpoints = 2;
}
