{
  "swagger": "2.0",
  "info": {
    "title": "systemcc/qscc/qscc.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/systemcc/qscc/chain/{channel_name}": {
      "get": {
        "summary": "GetChainInfo allows getting common info about channel blockchain",
        "operationId": "QSCCService_GetChainInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBlockchainInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QSCCService"
        ]
      }
    },
    "/systemcc/qscc/chain/{channel_name}/byhash/{block_hash}": {
      "get": {
        "summary": "GetBlockByHash allows getting block by hash",
        "operationId": "QSCCService_GetBlockByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBlock"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "block_hash",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "QSCCService"
        ]
      }
    },
    "/systemcc/qscc/chain/{channel_name}/bytxid/{tx_id}": {
      "get": {
        "summary": "GetBlockByTxID allows getting block by transaction",
        "operationId": "QSCCService_GetBlockByTxID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBlock"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tx_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QSCCService"
        ]
      }
    },
    "/systemcc/qscc/chain/{channel_name}/{block_number}": {
      "get": {
        "summary": "GetBlockByNumber allows getting block by number",
        "operationId": "QSCCService_GetBlockByNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonBlock"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "block_number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "QSCCService"
        ]
      }
    },
    "/systemcc/qscc/tx/{channel_name}/{tx_id}": {
      "get": {
        "summary": "GetTransactionByID allows getting transaction by id",
        "operationId": "QSCCService_GetTransactionByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProcessedTransaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tx_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "QSCCService"
        ]
      }
    }
  },
  "definitions": {
    "commonBlock": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/commonBlockHeader"
        },
        "data": {
          "$ref": "#/definitions/commonBlockData"
        },
        "metadata": {
          "$ref": "#/definitions/commonBlockMetadata"
        }
      },
      "description": "This is finalized block structure to be shared among the orderer and peer\nNote that the BlockHeader chains to the previous BlockHeader, and the BlockData hash is embedded\nin the BlockHeader.  This makes it natural and obvious that the Data is included in the hash, but\nthe Metadata is not."
    },
    "commonBlockData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "commonBlockHeader": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "uint64"
        },
        "previous_hash": {
          "type": "string",
          "format": "byte"
        },
        "data_hash": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "BlockHeader is the element of the block which forms the block chain\nThe block header is hashed using the configured chain hashing algorithm\nover the ASN.1 encoding of the BlockHeader"
    },
    "commonBlockMetadata": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "commonBlockchainInfo": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64"
        },
        "currentBlockHash": {
          "type": "string",
          "format": "byte"
        },
        "previousBlockHash": {
          "type": "string",
          "format": "byte"
        },
        "bootstrappingSnapshotInfo": {
          "$ref": "#/definitions/commonBootstrappingSnapshotInfo",
          "description": "Specifies bootstrapping snapshot info if the channel is bootstrapped from a snapshot.\nIt is nil if the channel is not bootstrapped from a snapshot."
        }
      },
      "description": "Contains information about the blockchain ledger such as height, current\nblock hash, and previous block hash."
    },
    "commonBootstrappingSnapshotInfo": {
      "type": "object",
      "properties": {
        "lastBlockInSnapshot": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Contains information for the bootstrapping snapshot."
    },
    "commonEnvelope": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string",
          "format": "byte",
          "title": "A marshaled Payload"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "title": "A signature by the creator specified in the Payload header"
        }
      },
      "title": "Envelope wraps a Payload with a signature so that the message may be authenticated"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protosProcessedTransaction": {
      "type": "object",
      "properties": {
        "transactionEnvelope": {
          "$ref": "#/definitions/commonEnvelope",
          "title": "An Envelope which includes a processed transaction"
        },
        "validationCode": {
          "type": "integer",
          "format": "int32",
          "title": "An indication of whether the transaction was validated or invalidated by committing peer"
        }
      },
      "description": "ProcessedTransaction wraps an Envelope that includes a transaction along with an indication\nof whether the transaction was validated or invalidated by committing peer.\nThe use case is that GetTransactionByID API needs to retrieve the transaction Envelope\nfrom block storage, and return it to a client, and indicate whether the transaction\nwas validated or invalidated by committing peer. So that the originally submitted\ntransaction Envelope is not modified, the ProcessedTransaction wrapper is returned."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
