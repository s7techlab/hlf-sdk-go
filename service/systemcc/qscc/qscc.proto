syntax = "proto3";

package hlfsdk.service.systemcc.qscc;

option go_package = "github.com/s7techlab/hlf-sdk-go/service/systemcc/qscc";


import "hyperledger/fabric-protos/common/ledger.proto";
import "hyperledger/fabric-protos/common/common.proto";
import "hyperledger/fabric-protos/peer/transaction.proto";

import "google/api/annotations.proto";

service QSCCService {

  // GetChainInfo allows getting common info about channel blockchain
  rpc GetChainInfo(GetChainInfoRequest) returns (common.BlockchainInfo) {
    option (google.api.http) = {
      get: "/qscc/chain/{channel_name}"
    };
  }

  // GetBlockByNumber allows getting block by number
  rpc GetBlockByNumber(GetBlockByNumberRequest) returns (common.Block) {
    option (google.api.http) = {
      get: "/qscc/chain/{channel_name}/{block_number}"
    };
  }

  // GetBlockByHash allows getting block by hash
  rpc GetBlockByHash(GetBlockByHashRequest) returns (common.Block) {
    option (google.api.http) = {
      get: "/qscc/chain/{channel_name}/byhash/{block_hash}"
    };
  }

  // GetBlockByTxID allows getting block by transaction
  rpc GetBlockByTxID (GetBlockByTxIDRequest) returns (common.Block) {
    option (google.api.http) = {
      get: "/qscc/chain/{channel_name}/bytxid/{tx_id}"
    };
  }

  // GetTransactionByID allows getting transaction by id
  rpc GetTransactionByID(GetTransactionByIDRequest) returns (protos.ProcessedTransaction) {
    option (google.api.http) = {
      get: "/qscc/tx/{channel_name}/{tx_id}"
    };
  }
}

message GetChainInfoRequest {
  string channel_name = 1;
}

message GetBlockByNumberRequest {
  string channel_name = 1;
  int64 block_number = 2;
}

message GetBlockByHashRequest {
  string channel_name = 1;
  bytes block_hash = 2;
}

message GetTransactionByIDRequest {
  string channel_name = 1;
  string tx_id = 2;
}

message GetBlockByTxIDRequest {
  string channel_name = 1;
  string tx_id = 2;
}
