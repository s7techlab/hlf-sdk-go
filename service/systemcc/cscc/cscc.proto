syntax = "proto3";

package hlfsdk.service.systemcc.cscc;

option go_package = "github.com/s7techlab/hlf-sdk-go/service/systemcc/cscc";


import "hyperledger/fabric-protos/common/common.proto";
import "hyperledger/fabric-protos/common/configtx.proto";
import "hyperledger/fabric-protos/peer/query.proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service CSCCService {

  // GetChainInfo allows joining channel using presented genesis block
  rpc JoinChain (JoinChainRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/systemcc/cscc/joinchain"
      body: "*"
    };
  }

  rpc GetChannels(google.protobuf.Empty) returns (protos.ChannelQueryResponse) {
    option (google.api.http) = {
      get: "/systemcc/cscc/chains"
    };
  }

  // GetConfigBlock returns genesis block of channel
  rpc GetConfigBlock (GetConfigBlockRequest) returns (common.Block) {
    option (google.api.http) = {
      get: "/systemcc/cscc/chains/{channel}"
    };
  }

  // GetChannelConfig returns channel configuration
  rpc GetChannelConfig (GetChannelConfigRequest) returns (common.Config) {
    option (google.api.http) = {
      get: "/systemcc/cscc/chains/{channel}/config"
    };
  }
}

message JoinChainRequest{
  string channel = 1;
  common.Block genesis_block = 2;
}

message GetConfigBlockRequest {
  string channel = 1;
}

message GetChannelConfigRequest {
  string channel = 1;
}
